qplot(data=stats,x=Fertility.Rate,y=Year,geom='boxplot')
stats <- read.csv(file.choose())
head(stats)
head(stats)
stats <- read.csv(file.choose())
head(stats)
stats <- read.csv(file.choose())
head(stats)
qplot(data=stats,x=Fertility.Rate)
qplot(data=stats,x=Fertility.Rate,y=Year)
qplot(data=stats,x=Fertility.Rate,y=Year,
colour=Region,size=I(5))
qplot(data=stats,x=Fertility.Rate,y=Year,
colour=Region,size=I(5),shape=I(17))
qplot(data=stats,x=Fertility.Rate,y=Year,
colour=Region,size=I(5),shape=I(5))
qplot(data=stats,x=Fertility.Rate,y=Year,
colour=Region,size=I(5),shape=I(5),
alpha=I(0.1))
qplot(data=stats,x=Fertility.Rate,y=Year,
colour=Region,size=I(5),shape=I(5),
alpha=I(0.1),main="Year VS Feritility.Rate")
library("ggplot2", lib.loc="~/R/win-library/3.4")
getwd()
movies <- read.csv(file.choose())
movies
movies
movies
movies.head()
head(movies)
colnames(movies) <- c("File","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
head(movies)
head(movies)
tail(movies)
str(movies)
summary(movies)
factor(movies$Year)
movies$Year <-factor(movies$Year)
summary(movies)
str(movies)
library(ggplot2)
movies <- read.csv(file.choose())
head(movies)
colnames(movies) <- c("File","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating))
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating)) +
geom_point()
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,
colour=Genre)) +
geom_point()
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,
colour=Genre,size=Genre)) +
geom_point()
ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,
colour=Genre,size=BudgetMillions)) +
geom_point()
p <- ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,
colour=Genre,size=BudgetMillions))
p + geom_point()
p + geom_line()
p + geom_point() + geom_line()
p + geom_line() + geom_point()
movies <- read.csv(file.choose())
head(movies)
colnames(movies) <- c("File","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
str(movies)
movies$Year <-factor(movies$Year)
str(movies)
p <- ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,
colour=Genre,size=BudgetMillions))
p + geom_point()
q <- ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,
colour=Genre,size=BudgetMillions))
q + geom_point()
q + geom_point(aes(size= CriticRating))
q + geom_point(aes(colour=BudgetMillions))
q + geom_point()
q + geom_point(aes(x=BudgetMillions))
q + geom_point(aes(x=BudgetMillions))
+ xlab("Budget Million $$")
q + geom_point(aes(x=BudgetMillions))+
xlab("Budget Million $$$$")
q + geom_point(aes(x=BudgetMillions))+
xlab("Budget Million $$")
q + geom_line(size=1) + geom_point()
movies <- read.csv(file.choose())
head(movies)
colnames(movies) <- c("File","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
str(movies)
movies$Year <-factor(movies$Year)
str(movies)
r <- ggplot(data=movies , aes(x=CriticRating,y=AudienceRating))+
geom_point()
library("ggplot2", lib.loc="~/R/win-library/3.4")
movies <- read.csv(file.choose())
head(movies)
colnames(movies) <- c("File","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
str(movies)
movies$Year <-factor(movies$Year)
str(movies)
u <- ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
u + geom_point() + geom_smooth(fill=NA)
u <-ggplot(data=movies,aes(x=Genre,y=AudienceRating,colour=Genre))
u + geom_boxplot()
u + geom_boxplot()
u + geom_boxplot(fill=NA)
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2) + geom_jitter()
u + geom_jitter() + geom_boxplot(size=1.2,appha=0.5)
u + geom_jitter() + geom_boxplot(size=1.2,alpha=0.5)
u <- ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
u + geom_point() + geom_smooth(fill=NA)
u <-ggplot(data=movies,aes(x=Genre,y=AudienceRating,colour=Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2) + geom_point()
u + geom_boxplot(size=1.2) + geom_jitter()
u + geom_jitter() + geom_boxplot(size=1.2,alpha=0.5)
# Get movies data
movies <- read.csv(file.choose())
head(movies)
colnames(movies) <- c("File","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
str(movies)
movies$Year <-factor(movies$Year)
str(movies)
v <-ggplot(data=movies,aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10,aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.)
v + geom_histogram(binwidth = 10,aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.,scales="free")
w <-ggplot(data=movies,aes(x=CriticRating,y=AudienceRating,colour=Genre))
w + geom_point(size=3)
w + geom_point(size=3)+
facet_grid(Genre~.)
w + geom_point(size=3)+
geom_smooth()+
facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)
w + geom_point(size=3)
w + geom_point(size=3)+
facet_grid(Genre~.)
w + geom_point(size=3)+
facet_grid(.~Year)
w + geom_point(size=3)+
facet_grid(Genre~Year)
w + geom_point(size=3)+
geom_smooth()+
facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions))+
geom_smooth()+
facet_grid(Genre~Year)
movies <- read.csv(file.choose())
head(movies)
colnames(movies) <- c("File","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
str(movies)
movies$Year <-factor(movies$Year)
str(movies)
o <- ggplot(data=movies,aes(x=BudgetMillion))
h <- o + geom_histogram(binwidth = 10,aes(fill=Genre),colour="Black")
h + xlab("Money Axis")+
ylab("Number of Moives")
h +
xlab("Money Axis")+
ylab("Number of Moives")
o <- ggplot(data=movies,aes(x=BudgetMillions))
h <- o + geom_histogram(binwidth = 10,aes(fill=Genre),colour="Black")
h +
xlab("Money Axis")+
ylab("Number of Moives")
h +
xlab("Money Axis")+
ylab("Number of Moives")+
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30))
h +
xlab("Money Axis")+
ylab("Number of Moives")+
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20))
h +
xlab("Money Axis")+
ylab("Number of Moives")+
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20))
h +
xlab("Money Axis")+
ylab("Number of Moives")+
ggtitle("Movie Budeget Distribution")+
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue",
size=40,
family = "Courier"))
data <- read.csv(file.choose())
mov <- read.csv("Section6-Homework-Data.csv")
mov <- read.csv(file.choose())
head(mov)
summary(mov)
summary(mov)
summary(mov)
str(mov)
library(ggplot2)
library("ggplot2", lib.loc="~/R/win-library/3.4")
ggplot(data=mov, aes(x=Day.of.Week)) + geom_bar()
filt <- (mov$Genre == "action") | (mov$Genre == "adventure") | (mov$Genre == "animation") | (mov$Genre == "comedy") | (mov$Genre == "drama")
filt2 <- (mov$Studio == "Buena Vista Studios") | (mov$Studio == "WB") | (mov$Studio == "Fox") | (mov$Studio == "Universal") | (mov$Studio == "Sony") | (mov$Studio == "Paramount Pictures")
mov2 <- mov[filt & filt2,]
p <- ggplot(data=mov2, aes(x=Genre, y=Studio))
p + geom_point()
p +
geom_boxplot()
p +
geom_boxplot() +
geom_point()
p +
geom_boxplot() +
geom_jitter()
p +
geom_jitter() +
geom_boxplot()
p +
geom_boxplot() +
geom_smooth(fill=0.7)
p +
geom_boxplot()
View(mov2)
p +
geom_boxplot(aes(x=Budget...mill., y=Studio)) +
geom_boxplot(size=0.7)
p +
geom_boxplot(aes(x=Budget...mill., y=Studio)) +
geom_point(size=0.7)
p +
geom_boxplot(aes(x=Budget...mill., y=Studio)) +
geom_smooth(fill=0.7)
p +
geom_boxplot(aes(x=Budget...mill., y=Studio)) +
geom_smooth(fill=0.7)
p <- ggplot(data=mov2, aes(x=Genre, y=Gross...US))
p + geom_point()
p +
geom_boxplot()
p +
geom_boxplot() +
geom_point()
p +
geom_boxplot() +
geom_jitter()
p +
geom_jitter() +
geom_boxplot()
p +
geom_jitter() +
geom_boxplot(alpha=0.7)
p +
geom_jitter(aes(size=Budget...mill.,colour=Stduio)) +
geom_boxplot(alpha=0.7)
p +
geom_jitter(aes(size=Budget...mill.,colour=Studio)) +
geom_boxplot(alpha=0.7)
p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
q <- p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha= 0.7, outlier.colour = NA)
q
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
ggtitle("Domestic Gross % by Genre") #plot title
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
ggtitle("Domestic Gross % by Genre") #plot title
q
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axes.title.x = element_text(colour="Blue", size=30),
axes.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axes.text = element_text(size=20),
axes.text = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axes.title.x = element_text(colour="Blue", size=30),
axes.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axes.text = element_text(size=20),
axes.text = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q
q$labels$size = "Budget $M"
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text = element_text(size=20),
axis.text = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q
q$labels$size = "Budget $M"
q
install.packages('caTools')
library(caTools)
# Here we use plt scatter chart for show Graph.
import matplotlib.pyplot as plt
x = [2,4,6,8,10,12]
y = [10,12,8,6,4,2]
x1 = [3,6,9,12,15]
y2 = [15,12,9,6,3]
col = ['r','b']
plt.scatter(x,y,color='r', label="scatter1")
plt.scatter(x1,y2,color='c',label="scatter2")
plt.title("Graph of scatter",loc='right')
plt.xlabel("X axes")
plt.ylabel("Y axes")
plt.legend()
plt.show()
import matplotlib.pyplot as plt
setwd("E:/My Data/Programing/1[code]/New Code/Machine Learning A-Z In Python & R/R")
setwd("E:/My Data/Programing/1[code]/New Code/Machine Learning A-Z In Python & R/R/03-Polynomial Regression")
dataset = read.csv('Position_Salaries')
setwd("E:/My Data/Programing/1[code]/New Code/Machine Learning A-Z In Python & R/R/03-Polynomial Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
View(dataset)
dataset = dataset[2:3]
dataset
lin_reg = lm(formula = Salary ~ . ,
data = dataset)
View(lin_reg)
View(lin_reg)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
View(dataset)
View(dataset)
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
summary(poly_reg)
dataset$Level2 = dataset$Level^3
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
summary(poly_reg)
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
summary(poly_reg)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y =dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y=predict(lin_reg,newdata = dataset)),
color = 'blue') +
ggtitle('Truth Or Bluff(Linear Regression)')+
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level , y =dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y=predict(poly_reg,newdata = dataset)),
color = 'blue') +
ggtitle('Truth Or Bluff(Polynomial Regression)')+
xlab('Level') +
ylab('Salary')
dataset$Level2 = dataset$Level^2
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level , y =dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y=predict(poly_reg,newdata = dataset)),
color = 'blue') +
ggtitle('Truth Or Bluff(Polynomial Regression)')+
xlab('Level') +
ylab('Salary')
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level , y =dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y=predict(poly_reg,newdata = dataset)),
color = 'blue') +
ggtitle('Truth Or Bluff(Polynomial Regression)')+
xlab('Level') +
ylab('Salary')
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level , y =dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y=predict(poly_reg,newdata = dataset)),
color = 'blue') +
ggtitle('Truth Or Bluff(Polynomial Regression)')+
xlab('Level') +
ylab('Salary')
dataset$Level4 = dataset$Level^3
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level , y =dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y=predict(poly_reg,newdata = dataset)),
color = 'blue') +
ggtitle('Truth Or Bluff(Polynomial Regression)')+
xlab('Level') +
ylab('Salary')
dataset$Level4 = NULL
View(dataset)
View(dataset)
View(dataset)
View(dataset)
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level , y =dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y=predict(poly_reg,newdata = dataset)),
color = 'blue') +
ggtitle('Truth Or Bluff(Polynomial Regression)')+
xlab('Level') +
ylab('Salary')
y_pred = predict(lin_reg , data.frame(Level = 6.5))
y_pred = predict(poly_reg , data.frame(Level = 6.5,
Level2 = 6.5^2))
View(dataset)
View(dataset)
y_pred = predict(poly_reg , data.frame(Level = 6.5,
Level3 = 6.5^3))
y_pred = predict(poly_reg , data.frame(Level = 6.5))
y_pred2 = predict(poly_reg, data.frame(Level = 6.5))
y_pred2 = predict(poly_reg, data.frame(Level4 = 6.5))
y_pred2 = predict(poly_reg, data.frame(Level4 = 6.5^4))
y_pred2 = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred2
setwd("E:/My Data/Programing/1[code]/New Code/Machine Learning A-Z In Python & R/R/04-SVM")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
View(dataset)
